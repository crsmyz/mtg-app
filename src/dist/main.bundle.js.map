{"version":3,"sources":["D:/Angular Projects/riffler-mtg-deck-sim/src/$_gendir lazy","D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.component.css","D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.component.html","D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.component.ts","D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.module.ts","D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.proxy.ts","D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.service.ts","D:/Angular Projects/riffler-mtg-deck-sim/src/app/hyper-geometric-calc.service.ts","D:/Angular Projects/riffler-mtg-deck-sim/src/environments/environment.ts","D:/Angular Projects/riffler-mtg-deck-sim/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular Projects/riffler-mtg-deck-sim/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"loader\\\" *ngIf=\\\"testMtgDeck.length === 0 && loadingData\\\">\\r\\n  <mat-spinner [color]=\\\"primary\\\" [mode]=\\\"indeterminate\\\"></mat-spinner>\\r\\n</div>\\r\\n\\r\\n<mat-toolbar class=\\\"toolbar\\\">\\r\\n  <img src=\\\"./assets/logo.png\\\" height=\\\"25\\\" width=\\\"25\\\">\\r\\n  <h1 class=\\\"toolbar-text\\\">{{title}}</h1>\\r\\n</mat-toolbar>\\r\\n\\r\\n<header class=\\\"app-header\\\">\\r\\n  <div>\\r\\n    <h1>Welcome to Riffler!</h1>\\r\\n    <h5>An app to simulate Magic: The Gathering&#174; decks. <br>To get started, type a list below and click submit.</h5>\\r\\n    <i class=\\\"fa fa-chevron-down fa-4x\\\" aria-hidden=\\\"true\\\"></i>\\r\\n    <div class=\\\"credit\\\">\\r\\n      <p><b>Art Credit: Mitchell Malloy + Wizards of the Coast</b></p>\\r\\n    </div>\\r\\n  </div>\\r\\n</header>\\r\\n\\r\\n<div class=\\\"app-wrapper\\\">\\r\\n\\r\\n  <h2 class=\\\"deckListHere\\\">Type your deck list:</h2>\\r\\n  <div class=\\\"deck-list-container\\\">\\r\\n    <!-- DECK LIST INPUT -->\\r\\n    <form class=\\\"deck-form\\\">\\r\\n      <mat-form-field>\\r\\n        <textarea type=\\\"text\\\" name=\\\"deck-list\\\" class=\\\"deck-list\\\" matInput placeholder=\\\"1 Cancel\\\" [(ngModel)]=\\\"deckDataInput\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n    </form>\\r\\n    <!-- SUBMIT DECKLIST -->\\r\\n    <button mat-button (click)=\\\"getDeckData()\\\">Submit</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div *ngIf=\\\"testMtgDeck && testMtgDeck.length > 0\\\">\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <!-- RESET DECK, HAND AND CARDS DRAWN -->\\r\\n      <button mat-raised-button=\\\"\\\" class=\\\"mat-raised-button\\\" (click)=\\\"resetSim()\\\">\\r\\n        <span class=\\\"mat-button-wrapper\\\">Reset</span>\\r\\n      </button>\\r\\n      <!-- DRAW OPENING HAND -->\\r\\n      <button mat-raised-button=\\\"\\\" class=\\\"mat-raised-button\\\" (click)=\\\"drawOpeningHand()\\\">\\r\\n        <span class=\\\"mat-button-wrapper\\\">Draw Opening Hand</span>\\r\\n      </button>\\r\\n      <!-- MULLIGAN -->\\r\\n      <button mat-raised-button=\\\"\\\" class=\\\"mat-raised-button\\\" (click)=\\\"mulligan()\\\">\\r\\n        <span class=\\\"mat-button-wrapper\\\">Mulligan</span>\\r\\n      </button>\\r\\n      <!-- DRAW -->\\r\\n      <button mat-raised-button=\\\"\\\" class=\\\"mat-raised-button\\\" (click)=\\\"drawCard()\\\" [disabled]=\\\"testMtgDeck.length <= 0\\\">\\r\\n        <span class=\\\"mat-button-wrapper\\\">Draw a Card</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <!-- NUMBER OF CARDS IN OPENING HAND -->\\r\\n    <h2 class=\\\"section-headers\\\">Hand: {{mtgHand.length}}</h2>\\r\\n    <div class=\\\"hand-row\\\">\\r\\n      <!-- CARDS IN OPENING HAND -->\\r\\n      <mat-card class=\\\"card-card\\\" *ngFor=\\\"let hand of mtgHand\\\">\\r\\n        <img mat-card-image class=\\\"hand-card-img\\\" src={{hand.image_uris.normal}}>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <!-- NUMBER OF CARDS DRAWN -->\\r\\n    <h2 class=\\\"section-headers\\\">Cards Drawn: {{mtgDrawnCards.length}}</h2>\\r\\n    <div class=\\\"hand-row\\\">\\r\\n      <!-- CARDS DRAWN -->\\r\\n      <mat-card class=\\\"card-card\\\" *ngFor=\\\"let drawnCard of mtgDrawnCards\\\">\\r\\n        <img mat-card-image class=\\\"hand-card-img\\\" src={{drawnCard.image_uris.normal}}>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <!-- NUMBER OF CARDS LEFT IN DECK -->\\r\\n    <h2 class=\\\"section-headers\\\">Deck List: {{testMtgDeck.length}}</h2>\\r\\n    <div class=\\\"hand-row\\\">\\r\\n      <!-- CARDS IN DECK -->\\r\\n      <mat-card class=\\\"card-card\\\" *ngFor=\\\"let deck of testMtgDeck\\\">\\r\\n        <img mat-card-image class=\\\"hand-card-img\\\" src={{deck.image_uris.normal}}>\\r\\n        {{deck.percentageToDraw}}\\r\\n      </mat-card>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport { AppService } from './app.service';\r\nimport { HyperGeometricCalcService } from './hyper-geometric-calc.service';\r\nimport { Card, DeckProbabilityContext, CardsResponse, CardItem, CardObject } from './app.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'Riffler';\r\n  // drawn cards list\r\n  mtgDrawnCards: any[] = [];\r\n  // deck list\r\n  // testtestMtgDeck: Card[] = [];\r\n  // opening hand\r\n  mtgHand: any = [];\r\n  testMtgDeck: CardObject[] = [];\r\n  // default mulligan number\r\n  mull: number = 6;\r\n  // experiment deck\r\n  controlDeck: Card[] = [];\r\n  // experiment hand\r\n  controlHand: Card[] = [];\r\n  deckList: string;\r\n  textPlaceHolder: string = `1 Cancel \\n 1 Ponder \\n 1 Unsummon`;\r\n  deckDataInput: string = '';\r\n  loadingData: boolean = false;\r\n\r\n  constructor(private appService: AppService,\r\n    private hyperGeometricCalcService: HyperGeometricCalcService) { }\r\n\r\n  getDeckData() {\r\n    this.loadingData = true;\r\n    this.appService.getDeckData(this.deckDataInput).subscribe(resp => {\r\n      console.log(resp.data);\r\n      this.testMtgDeck = resp.data;\r\n    });\r\n  }\r\n\r\n  // draw your opening hand\r\n  public drawOpeningHand(): void {\r\n    this.resetSim();\r\n    if (this.mtgHand && this.mtgHand.length > 0) {\r\n      for (let i = 0; i < 7; i++) {\r\n        const card = this.mtgHand.shift();\r\n        this.testMtgDeck.push(card);\r\n      }\r\n      for (let i = 0; i < 7; i++) {\r\n        const index = (Math.floor(Math.random() * this.testMtgDeck.length));\r\n        const card = this.testMtgDeck.splice((Math.floor(Math.random() * this.testMtgDeck.length)), 1);\r\n        this.mtgHand.push(card[0]);\r\n      }\r\n    } else {\r\n      for (let i = 0; i < 7; i++) {\r\n        const index = (Math.floor(Math.random() * this.testMtgDeck.length));\r\n        const card = this.testMtgDeck.splice((Math.floor(Math.random() * this.testMtgDeck.length)), 1);\r\n        this.mtgHand.push(card[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // clear opening hand and drawn cards\r\n  public resetSim(): void {\r\n    if (this.mtgDrawnCards && this.mtgDrawnCards.length > 0) {\r\n      this.testMtgDeck = this.testMtgDeck.concat(this.mtgDrawnCards);\r\n      this.mtgDrawnCards = [];\r\n    }\r\n    if (this.mtgHand && this.mtgHand.length > 0) {\r\n      this.testMtgDeck = this.testMtgDeck.concat(this.mtgHand);\r\n      this.mtgHand = [];\r\n    }\r\n    this.mull = 6;\r\n  }\r\n\r\n  public drawCard(): void {\r\n    // TODO: implement hypergeometric calculations for each card left in the deck\r\n    // this.calculateEachCardDrawPercentage();\r\n    const index = (Math.floor(Math.random() * this.testMtgDeck.length));\r\n    const card = this.testMtgDeck.splice((Math.floor(Math.random() * this.testMtgDeck.length)), 1);\r\n    this.mtgDrawnCards.push(card[0]);\r\n  }\r\n\r\n  public mulligan(): void {\r\n    if (this.mull === 0) {\r\n      this.mull = 6;\r\n    }\r\n    this.testMtgDeck = this.testMtgDeck.concat(this.mtgHand);\r\n    this.mtgHand = [];\r\n    for (let i = 0; i < this.mull; i++) {\r\n      const index = (Math.floor(Math.random() * this.testMtgDeck.length));\r\n      const card = this.testMtgDeck.splice((Math.floor(Math.random() * this.testMtgDeck.length)), 1);\r\n      this.mtgHand.push(card[0]);\r\n    }\r\n    this.mull--;\r\n  }\r\n\r\n  private calculateEachCardDrawPercentage() {\r\n    let deckCount: number;\r\n    if (this.testMtgDeck.length <= 53 && this.testMtgDeck.length !== 0) {\r\n      deckCount = this.testMtgDeck.length;\r\n      console.log(deckCount);\r\n      this.testMtgDeck.forEach(card => {\r\n        card.percentageToDraw = this.hyperGeometricCalcService.calcHypGeo(deckCount--);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { HyperGeometricCalcService } from './hyper-geometric-calc.service';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppProxy } from './app.proxy';\r\nimport { AppService } from './app.service';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    MatProgressSpinnerModule,\r\n    MatFormFieldModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    BrowserAnimationsModule,\r\n    MatExpansionModule,\r\n    MatInputModule,\r\n    HttpModule,\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [AppProxy, AppService, HyperGeometricCalcService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Card, CardsResponse } from './app.model';\r\n\r\n@Injectable()\r\nexport class AppProxy {\r\n\r\n    API_URL: string = 'https://api.scryfall.com/';\r\n    CARD_URL: string  = 'cards/named?exact=';\r\n    COLLECTION_URL: string = 'cards/collection';\r\n    DECKLIST_URL: string = this.API_URL + this.COLLECTION_URL;\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getDeckList(deckListRequest: any): any {\r\n        return this.http.post(this.DECKLIST_URL, deckListRequest)\r\n        .map((res: any) => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.proxy.ts","import { Injectable } from '@angular/core';\r\nimport { AppProxy } from './app.proxy';\r\nimport { Card, CardsResponse, CardItem, CardRequest, CardName } from './app.model';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n    constructor(private appProxy: AppProxy) { }\r\n\r\n    // return JSON from proxy to component\r\n    getDeckData(data: string): any {\r\n        return this.appProxy.getDeckList(this.convertToRequest(data));\r\n    }\r\n\r\n    convertToRequest(data: string) {\r\n        const cardArrayNumber: string[] = data.match(/\\d+/g);\r\n        let cardArrayName: string[] = data.split(/[\\d]/);\r\n        cardArrayName = cardArrayName.filter(val => val !== '');\r\n        const cardRequest: CardRequest = {\r\n            identifiers: []\r\n        };\r\n        cardArrayNumber.forEach((card, index) => {\r\n            if (cardArrayName[index] !== '') {\r\n                for (let i = 0; i < +cardArrayNumber[index]; i++) {\r\n                    const cardObj: CardName = {\r\n                        name: cardArrayName[index].substr(1)\r\n                    };\r\n                    cardRequest.identifiers.push(cardObj);\r\n                }\r\n            }\r\n        });\r\n        return cardRequest;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular Projects/riffler-mtg-deck-sim/src/app/app.service.ts","import { Injectable } from '@angular/core';\r\nimport { DeckProbabilityContext } from './app.model';\r\n\r\n@Injectable()\r\nexport class HyperGeometricCalcService {\r\n    deckProbContext: DeckProbabilityContext;\r\n    deckCount: number;\r\n    probabilityResults: number[] = [];\r\n    drawResults: number[] = [];\r\n\r\n    constructor() { }\r\n\r\n    public calcHypGeo(deckCount?: number) {\r\n        if (deckCount) {\r\n          for (let i = 1; i < 5; i++) {\r\n            this.deckProbContext = {\r\n              deckCardCount: 53, // population size, 53\r\n              subPopSize: i, // sucesses in population, 4 glory bringers, etc.\r\n              sampleSize: 8, // number of cards we're drawing, ie 1\r\n              xValue: 1 // odds of drawing at least 1\r\n            };\r\n            return this.compute();\r\n          }\r\n        }\r\n      }\r\n\r\n      private compute() {\r\n        const nn = Math.floor(this.deckProbContext.deckCardCount);\r\n        const m = Math.floor(this.deckProbContext.subPopSize);\r\n        const n = Math.floor(this.deckProbContext.sampleSize);\r\n        const x = Math.floor(this.deckProbContext.xValue);\r\n        let prob;\r\n        if (n <= 0 || m <= 0 || nn <= 0) {\r\n          alert('Parameters must be positive integers');\r\n          prob = 0;\r\n        } else if (m > nn || n > nn) {\r\n          alert('m and n must be less than N');\r\n          prob = 0;\r\n        } else if (x < 0 || x < n + m - nn) {\r\n          prob = 0;\r\n        } else if (x >= n || x >= m) {\r\n          prob = 1;\r\n        } else {\r\n          if (2 * m > nn) {\r\n            if (2 * n > nn) {\r\n              prob = this.hyp(nn - m - n + x, nn - n, nn - m, nn);\r\n            } else {\r\n              prob = 1 - this.hyp(n - x - 1, n, nn - m, nn);\r\n            }\r\n          } else if (2 * n > nn) {\r\n            prob = 1 - this.hyp(m - x - 1, m, nn - n, nn);\r\n          } else {\r\n            prob = this.hyp(x, n, m, nn);\r\n          }\r\n        }\r\n        prob = Math.round(prob * 100000) / 100000;\r\n        if (!this.deckCount) {\r\n          this.probabilityResults.push(prob);\r\n        } else if (this.deckCount) {\r\n          this.drawResults.push(prob);\r\n        }\r\n        return prob;\r\n      }\r\n\r\n      private hyp(x, n, m, nn) {\r\n        let nz, mz;\r\n        // best to have n<m\r\n        if (m < n) {\r\n          nz = m;\r\n          mz = n;\r\n        } else {\r\n          nz = n;\r\n          mz = m;\r\n        }\r\n        let h = 1;\r\n        let s = 1;\r\n        let k = 0;\r\n        let i = 0;\r\n        while (i < x) {\r\n          while (s > 1 && k < nz) {\r\n            h = h * (1 - mz / (nn - k));\r\n            s = s * (1 - mz / (nn - k));\r\n            k = k + 1;\r\n          }\r\n          h = h * (nz - i) * (mz - i) / (i + 1) / (nn - nz - mz + i + 1);\r\n          s = s + h;\r\n          i = i + 1;\r\n        }\r\n        while (k < nz) {\r\n          s = s * (1 - mz / (nn - k));\r\n          k = k + 1;\r\n        }\r\n        return s;\r\n      }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular Projects/riffler-mtg-deck-sim/src/app/hyper-geometric-calc.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular Projects/riffler-mtg-deck-sim/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular Projects/riffler-mtg-deck-sim/src/main.ts"],"sourceRoot":"webpack:///"}